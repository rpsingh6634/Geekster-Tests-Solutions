Ques--3
       How to use CSS in react? Explain all methods by using a small code snippets.

Answer--3
        There are many ways to style React with CSS.

1--Inline CSS--
               To style an element with the inline style attribute, the value must be a JavaScript object.The inline CSS is written in a JavaScript object, properties with two names, like background-color, must be written with camel case syntax

Example--

class MyHeader extends React.Component {
  render() {
    return (
      <div>
      <h1 style={{color: "red"}}>Hello Style!</h1>
      <p>Add a little style!</p>
      </div>
    );
  }
}


2--Internal CSS--
                 It is also known as CSS in js.CSS-in-JS allows us to write CSS styles directly in our components' javascript (.js) files.
Not only does it allow you write CSS style rules without having to make a single .css file, but these styles are scoped to individual components.

Example--
   
class MyHeader extends React.Component {
  render() {
    const mystyle = {
      color: "white",
      backgroundColor: "DodgerBlue",
      padding: "10px",
      fontFamily: "Arial"
    };
    return (
      <div>
      <h1 style={mystyle}>Hello Style!</h1>
      <p>Add a little style!</p>
      </div>
    );
  }
}



3--External CSS-
                You can write your CSS styling in a separate file, just save the file with the .css file extension, and import it in your application.

Example--
         create a file with the extension of .css like (Header.css) and use a styles in that file like..

body {
  background-color: #282c34;
  color: white;
  padding: 40px;
  font-family: Arial;
  text-align: center;
}

And then import the stylesheet in your application.

import React from 'react';
import ReactDOM from 'react-dom/client';
import './Header.css';

class MyHeader extends React.Component {
  render() {
    return (
      <div>
      <h1>Hello Style!</h1>
      <p>Add a little style!.</p>
      </div>
    );
   
}
}

ReactDOM.render(<MyHeader />, document.getElementById('root'));


4--CSS Modules-
               Another way of adding styles to your application is to use CSS Modules.
CSS Modules are convenient for components that are placed in separate files.


Example-- 
         Create the CSS module with the <filename>.module.css extension,Create a new file called "mystyle.module.css" and insert some CSS code in it-

.bigblue {
  color: DodgerBlue;
  padding: 40px;
  font-family: Arial;
  text-align: center;
}

Import the stylesheet in your component

import React from 'react';
import ReactDOM from 'react-dom/client';
import styles from './mystyle.module.css'; 

class Car extends React.Component {
  render() {
    return <h1 className={styles.bigblue}>Hello Car!</h1>;
  }
}

export default Car;


Import the component in your application

import React from 'react';
import ReactDOM from 'react-dom/client';
import Car from './App.js';

ReactDOM.render(<Car />, document.getElementById('root'));



These are the multiple ways to use CSS in react application.






